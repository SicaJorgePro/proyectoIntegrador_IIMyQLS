
SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';
-- -----------------------------------------------------
-- Schema trailerflix
-- -----------------------------------------------------
CREATE DATABASE `trailerflix`;
USE `trailerflix` ;

-- -----------------------------------------------------
-- Table `trailerflix`.`CATEGORIA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CATEGORIA` (
  `id_categoria` INT NOT NULL AUTO_INCREMENT,
  `nombre_categoria` VARCHAR(45) NULL,
  PRIMARY KEY (`id_categoria`))
ENGINE = InnoDB;

-- REGISTROS A LA TABLA
INSERT INTO `CATEGORIA` (`nombre_categoria`) VALUES 
('SERIE'),
('PELICULA');


-- -----------------------------------------------------
-- Table `trailerflix`.`CONTENIDO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CONTENIDO` (
  `id_pelicula` INT NOT NULL,
  `poster` VARCHAR(20) NULL,
  `titulo` TEXT NULL,
  `id_categ_peli` INT NOT NULL,
  `temporada` VARCHAR(10) NULL,
  `resumen` TEXT NULL,
  `trailer` TEXT NULL,
  PRIMARY KEY (`id_pelicula`),
  INDEX `id_categ_peli_fk_idx` (`id_categ_peli` ASC) VISIBLE,
  CONSTRAINT `id_categ_peli_fk`
    FOREIGN KEY (`id_categ_peli`)
    REFERENCES `trailerflix`.`CATEGORIA` (`id_categoria`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;
-- REGISTROS A LA TABLA
INSERT INTO `CONTENIDO` (id_pelicula, poster,  titulo, id_categ_peli, temporada, resumen ,trailer ) VALUES 
(1, '/posters/img.jpg', 'The Crown', 1, '4', 'Este drama narra las rivalidades políticas y el romance de la reina Isabel II, así como los sucesos que moldearon la segunda mitad del siglo XX.', NULL),
(2, '/posters/img.jpg', 'Riverdale', 1, '5', 'El paso a la edad adulta incluye sexo, romance, escuela y familia. Para Archie y sus amigos, también hay misterios oscuros.', NULL),
(3, '/posters/img.jpg', 'The Mandalorian', 1, '2', 'Ambientada tras la caída del Imperio y antes de la aparición de la Primera Orden, la serie sigue los pasos de un pistolero solitario en las aventuras que protagoniza en los confines de la galaxia, donde no alcanza la autoridad de la Nueva República.', 'https://www.youtube.com/embed/aOC8E8z_ifw'),
(4, '/posters/img.jpg', 'The Umbrella Academy', 1, '1', 'La muerte de su padre reúne a unos hermanos distanciados y con extraordinarios poderes que descubren impactantes secretos y una amenaza que se cierne sobre la humanidad.', NULL),
(5, '/posters/img.jpg', 'Gambito de Dama', 1, '1', 'En los cincuenta, una joven de un orfanato descubre que tiene un increíble don para el ajedrez y recorre el arduo camino a la fama mientras lucha contra las adicciones.', NULL),
(6, '/posters/img.jpg', 'Enola Holmes', 2, 'N/A', 'La hermana menor de Sherlock, descubre que su madre ha desaparecido y se dispone a encontrarla. En su búsqueda, saca a relucir el sabueso que corre por sus venas y se encuentra con una conspiración que gira en torno a un misterioso lord, demostrando que su ilustre hermano no es el único talento en la familia.', NULL),
(7, '/posters/img.jpg', 'Guasón', 2, 'N/A', 'Arthur Fleck (Phoenix) es un hombre ignorado por la sociedad, cuya motivación en la vida es hacer reír. Pero una serie de trágicos acontecimientos le llevarán a ver el mundo de otra forma. Película basada en el popular personaje de DC Comics Joker, conocido como archivillano de Batman, pero que en este film tomará un cariz más realista y oscuro.', 'https://www.youtube.com/embed/zAGVQLHvwOY'),
(8, '/posters/img.jpg', 'Avengers: End Game', 2, 'N/A', 'Después de los devastadores eventos de los Vengadores: Infinity War (2018), el universo está en ruinas. Con la ayuda de los aliados restantes, los Vengadores se reúnen una vez más para revertir las acciones de Thanos y restaurar el equilibrio del universo.', NULL),
(9, '/posters/img.jpg', 'Juego de tronos', 1, '8', 'En un mundo fantástico y en un contexto medieval varias familias, relativas a la nobleza, se disputan el poder para dominar el territorio ficticio de Poniente (Westeros) y tomar el control de los Siete Reinos desde el Trono de Hierro, lugar donde el rey ejerce el poder.', NULL),
(10, '/posters/img.jpg', 'The Flash', 1, '6', 'Sigue las veloces aventuras de Barry Allen, un joven común y corriente con el deseo latente de ayudar a los demás. Cuando una inesperada partícula aceleradora golpea por accidente a Barry, de pronto se encuentra cargado de un increíble poder para moverse a increíbles velocidades.', NULL),
(11, '/posters/img.jpg', 'The Big Bang Theory', 1, '12', 'Leonard y Sheldon son dos físicos que comparten trabajo y apartamento. La serie comienza con la mudanza de Penny, su nueva y atractiva vecina, y hace hincapié en la dificultad de los físicos para relacionarse con personas fuera de su entorno para dar lugar a situaciones cómicas.', 'https://www.youtube.com/embed/WBb3fojgW0Q'),
(12, '/posters/img.jpg', 'Friends', 1, '10', 'Friends narra las aventuras y desventajas de seis jóvenes de Nueva York: Rachel, Monica, Phoebe, Ross, Chandler y Joey.', NULL),
(13, '/posters/img.jpg', 'Anne with an E', 1, '2', 'Anne Shirley es una niña huérfana que vive en un pequeño pueblo llamado Avonlea que pertenece a la Isla del Príncipe Eduardo, en el año 1890.', NULL),
(14, '/posters/img.jpg', 'Expedientes Secretos X', 1, '11', 'Fox Mulder y Dana Scully son dos investigadores del FBI que investigan casos sin resolución ni explicación, ya sea por razones paranormales...', 'https://www.youtube.com/embed/KKziOmsJxzE'),
(15, '/posters/img.jpg', 'Chernobyl', 1, '1', 'Sigue «la verdadera historia de una de las peores catástrofes provocadas por el hombre y habla de los valientes hombres y mujeres que se sacrificaron para salvar a Europa de un desastre inimaginable.', 'https://www.youtube.com/embed/s9APLXM9Ei8'),
(16, '/posters/img.jpg', 'Westworld', 1, '3', 'Westworld es una oscura odisea acerca del amanecer de la conciencia artificial y la evolución del pecado.', 'https://www.youtube.com/embed/qLFBcdd6Qw0'),
(17, '/posters/img.jpg', 'Halt and Catch Fire', 1, '4', 'Situada en los inicios de la década de 1980, un visionario ficticio...', 'https://www.youtube.com/embed/pWrioRji60A'),
(18, '/posters/img.jpg', 'Ava', 2, 'N/A', 'Ava es una mortífera asesina a sueldo que trabaja para una organización de operaciones encubiertas.', NULL),
(19, '/posters/img.jpg', 'Aves de presa y la fantabulosa emancipación de una Harley Quinn', 2, 'N/A', 'Después de separarse de Joker, Harley Quinn y otras tres heroínas...', NULL),
(20, '/posters/img.jpg', 'Archivo', 2, 'N/A', '2038: George Almore está trabajando en una verdadera IA equivalente a la humana.', 'https://www.youtube.com/embed/VHSoCnDioAo'),
(21, '/posters/img.jpg', 'Jumanji - The next level', 2, 'N/A', 'Las aventuras continúan en el fantástico mundo del video juego Jumanji.', 'https://www.youtube.com/embed/rBxcF-r9Ibs'),
(22, '/posters/img.jpg', '3022', 2, 'N/A', 'La película está ambientada en una estación espacial en el futuro.', 'https://www.youtube.com/embed/AGQ7OkmIx4Q'),
(23, '/posters/img.jpg', 'IT - Capítulo 2', 2, 'N/A', 'En este segundo capitulo Han pasado 27 años desde que el "Club de los Perdedores"...', 'https://www.youtube.com/embed/hZeFeYSmBcg'),
(24, '/posters/img.jpg', 'Pantera Negra', 2, 'N/A', 'T’Challa regresa a su hogar en la apartada nación africana de Wakanda...', 'https://www.youtube.com/embed/BE6inv8Xh4A'),
(25, '/posters/img.jpg', 'Contra lo imposible (Ford versus Ferrari)', 2, 'N/A', 'Los ganadores del Premio de la Academia protagonizan CONTRA LO IMPOSIBLE...', 'https://www.youtube.com/embed/SOVb0-2g1Q0'),
(26, '/posters/img.jpg', 'Centígrados', 2, 'N/A', 'Una joven pareja estadounidense viaja a las montañas árticas de Noruega.', NULL),
(27, '/posters/img.jpg', 'DOOM: Aniquilación', 2, 'N/A', 'Doom: Aniquilación sigue a un grupo de marines espaciales...', 'https://www.youtube.com/embed/nat3u3gAVLE'),
(28, '/posters/img.jpg', 'Contagio', 2, 'N/A', 'De repente, un virus mortal comienza a propagarse por todo el mundo.', 'https://www.youtube.com/embed/4sYSyuuLk5g'),
(29, '/posters/img.jpg', 'Viuda Negra', 2, 'N/A', 'Primera película individual de la Viuda Negra en el universo cinematográfico de Marvel.', 'https://www.youtube.com/embed/BIn8iANwEog'),
(30, '/posters/img.jpg', 'The Martian', 2, 'N/A', 'Durante una misión a Marte de la nave tripulada Ares III...', 'https://www.youtube.com/embed/XvB58bCVfng'),
(31, '/posters/img.jpg', 'Ex-Machina', 2, 'N/A', 'Un programador multimillonario selecciona a Caleb...', 'https://www.youtube.com/embed/XRYL5spvEcI'),
(32, '/posters/img.jpg', 'Jurassic World', 2, 'N/A', 'Veintidós años después de lo ocurrido en Jurassic Park...', NULL),
(33, '/posters/img.jpg', 'Soy leyenda', 2, 'N/A', 'Años después de que una plaga mate a la mayoría de la humanidad...', 'https://www.youtube.com/embed/dtKMEAXyPkg'),
(34, '/posters/img.jpg', 'El primer hombre en la luna', 2, 'N/A', 'Cuenta la historia de la misión de la NASA que llevó al primer hombre a la luna...', NULL),
(35, '/posters/img.jpg', 'Titanes del pacífico - La insurrección', 2, 'N/A', 'Han pasado 10 años tras la primera invasión que sufrió la humanidad...', NULL);

-- -----------------------------------------------------
-- Table `trailerflix`.`GENERO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `GENERO` (
  `id_genero` INT NOT NULL AUTO_INCREMENT,
  `nombre_genero` VARCHAR(50) NULL,
  PRIMARY KEY (`id_genero`))
ENGINE = InnoDB;
-- REGISTROS A LA TABLA
INSERT INTO `GENERO` ( `nombre_genero`) VALUES
('Ciencia Ficción'),
('Fantástica'),
('Drama'),
('Ficción'),
('Sucesos'),
('Misterio'),
('Hechos verídicos'),
('Crimen'),
('Suspenso'),
('Aventura'),
('Acción'),
('Comedia'),
('Familia'),
('Western'),
('Tecnología'),
('Terror');


-- -----------------------------------------------------
-- Table `trailerflix`.`ACTORES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ACTORES` (
  `id_actores` INT NOT NULL AUTO_INCREMENT,
  `nombre_actores` VARCHAR(50) NULL,
  PRIMARY KEY (`id_actores`))
ENGINE = InnoDB;
-- REGISTROS A LA TABLA
INSERT INTO `Actores` (`nombre_actores`) VALUES
('Adam Nagaitis'),
('Adeel Akhtar'),
('Aidan Gallagher'),
('Alana Cavanaugh'),
('Alice Braga'),
('Alicia Vikander'),
('Amy Manson'),
('Amybeth McNulty'),
('Angus Macfadyen'),
('Anya Taylor-Joy'),
('Awkwafina'),
('Benjamin Sokolow'),
('Bill Hader'),
('Bill Skarsgård'),
('Brett Cullen'),
('Bruce Harwood'),
('Bryce Dallas Howard'),
('Burn Gorman'),
('Cailee Spaeny'),
('Caitriona Balfe'),
('Camila Mendes'),
('Candice Patton'),
('Carl Weathers'),
('Carlos Valdes'),
('Casey Cott'),
('Chadwick Boseman'),
('Charlie Tahan'),
('Chloe Pirrie'),
('Chris Bartlett'),
('Chris Evans'),
('Chris Hemsworth'),
('Chris Messina'),
('Chris Pratt'),
('Christian Bale'),
('Claire Fox'),
('Claire Foy'),
('Claire Selby'),
('Colin Farrell'),
('Common'),
('Corey Johnson'),
('Corey Stoll'),
('Corrine Koslo'),
('Courteney Cox'),
('Dalila Bela'),
('Danai Gurira'),
('Daniel Kaluuya'),
('Danielle Panabaker'),
('Dash Mihok'),
('David Castañeda'),
('David Duchovny'),
('David Harbour'),
('David Schwimmer'),
('Domhnall Gleeson'),
('Dominic Mafham'),
('Dwayne Johnson'),
('Ed Harris'),
('Elliot Page'),
('Emilia Clarke'),
('Emily Bayiokos'),
('Emily Watson'),
('Emma Thompson'),
('Emmy Raver-Lampman'),
('Enver Gjokaj'),
('Evan Rachel Wood'),
('Ewan McGregor'),
('Florence Pugh'),
('Frances Conroy'),
('Gana Bayarsaikhan'),
('Geena Davis'),
('Génesis Rodríguez'),
('Geraldine James'),
('Giancarlo Esposito'),
('Gillian Anderson'),
('Grant Gustin'),
('Gwyneth Paltrow'),
('Harry Melling'),
('Helena Bonham Carter'),
('Henry Cavill'),
('Ioan Gruffudd'),
('Irrfan Khan'),
('Isaiah Mustafa'),
('Jack Black'),
('James McAvoy'),
('James Weber Brown'),
('Janina Elkin'),
('Jared Harris'),
('Jason Clarke'),
('Jay Ryan'),
('Jeff Daniels'),
('Jeffrey Wright'),
('Jennifer Aniston'),
('Jennifer Ehle'),
('Jeremy Renner'),
('Jesse L. Martin'),
('Jessica Chastain'),
('Jessie Buckley'),
('Jim Parsons'),
('Jing Tian'),
('Joaquin Phoenix'),
('John Boyega'),
('John Malkovich'),
('Johnny Galecki'),
('Jon Bernthal'),
('Jorja Fox'),
('Josh Lucas'),
('Jude Law'),
('Judy Greer'),
('Jurnee Smollett'),
('Kaley Cuoco'),
('Karen Gillan'),
('Kate Mara'),
('Kate Walsh'),
('Kate Winslet'),
('Kerry Bishé'),
('Kevin Hart'),
('Kit Harington'),
('Kristen Wiig'),
('Kunal Nayyar'),
('Kyle Chandler'),
('Laurence Fishburne'),
('Lee Pace'),
('Lena Headey'),
('Lia Williams'),
('Lili Reinhart'),
('Lisa Kudrow'),
('Lorina Kamburova'),
('Louis Partridge'),
('Lucas Jade Zumann'),
('Luke Allen-Gale'),
('Luke Hemsworth'),
('Lupita Nyong\'o'),
('Mackenzie Davis'),
('Mädchen Amick'),
('Madelaine Petsch'),
('Margot Robbie'),
('Marion Cotillard'),
('Marisol Nichols'),
('Mark Ruffalo'),
('Martin Freeman'),
('Mary Elizabeth Winstead'),
('Matt Damon'),
('Matt LeBlanc'),
('Matt Smith'),
('Matthew Perry'),
('Mayim Bialik'),
('Melissa Rauch'),
('Michael B. Jordan'),
('Michael Peña'),
('Millie Bobby Brown'),
('Miranda Cosgrove'),
('Misty Rosas'),
('Mitch Pileggi'),
('Moses Ingram'),
('Nick Jonas'),
('Nick Robinson'),
('Nikolaj Coster-Waldau'),
('Nina Bergman'),
('Noah Jupe'),
('O.T. Fagbenle'),
('Olivia Colman'),
('Omar Epps'),
('Omar Sy'),
('Oscar Isaac'),
('Patrick Fugit'),
('Paul Ritter'),
('Pedro Pascal'),
('Peter Dinklage'),
('Peter Ferdinando'),
('R. H. Thomson'),
('Rachel Weisz'),
('Ray Winstone'),
('Rhona Mitra'),
('Rinko Kikuchi'),
('Rio Hackford'),
('Robert De Niro'),
('Robert Downey Jr.'),
('Robert Patrick'),
('Robert Sheehan'),
('Rosie Perez'),
('Ryan Gosling'),
('Salli Richardson-Whitfield'),
('Sam Claflin'),
('Scarlett Johansson'),
('Scoot McNairy'),
('Scott Eastwood'),
('Sean Bean'),
('Shea Whigham'),
('Simon Helberg'),
('Sonoya Mizuno'),
('Sophie Turner'),
('Stacy Martin'),
('Stellan Skarsgård'),
('Tessa Thompson'),
('Thandie Newton'),
('Theo James'),
('Thomas Brodie-Sangster'),
('Tobias Menzies'),
('Toby Huss'),
('Toby Jones'),
('Tom Braidwood'),
('Tom Cavanagh'),
('Tom Hopper'),
('Vanesa Kirby'),
('Vincent D\'Onofrio'),
('Vincent Piazza'),
('Will Smith'),
('William Hurt'),
('Willow Smith'),
('Zazie Beetz');


-- -----------------------------------------------------
-- Table `trailerflix`.`CONTENIDO_GENERO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CONTENIDO_GENERO` (
  `id_pelicula` INT NOT NULL,
  `id_genero` INT NOT NULL,
  PRIMARY KEY (`id_pelicula`, `id_genero`),
  INDEX `id_genero_fk_idx` (`id_genero` ASC) VISIBLE,
  CONSTRAINT `id_pelicula_fk`
    FOREIGN KEY (`id_pelicula`)
    REFERENCES `trailerflix`.`CONTENIDO` (`id_pelicula`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `id_genero_fk`
    FOREIGN KEY (`id_genero`)
    REFERENCES `trailerflix`.`GENERO` (`id_genero`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;
-- REGISTROS A LA TABLA
INSERT INTO `CONTENIDO_GENERO` (id_pelicula, id_genero ) VALUES 
(3,1),
(3,2),
(4,1),
(4,2),
(5,3),
(5,4),
(5,5),
(2,3),
(2,6),
(2,4),
(1,3),
(1,7),
(6,4),
(6,3),
(6,6),
(7,8),
(7,9),
(7,3),
(8,10),
(8,1),
(8,11),
(9,10),
(9,2),
(9,3),
(10,1),
(10,2),
(11,12),
(11,2),
(11,4),
(12,12),
(12,13),
(12,3),
(13, 3),
(13, 13),
(13, 14),
(14, 3),
(14, 1),
(15, 3),
(15, 7),
(16, 14),
(16, 1),
(17, 4),
(17, 3),
(17, 15),
(18, 11),
(18, 3),
(18, 9),
(19, 11),
(19, 4),
(19, 12),
(20, 11),
(20, 1),
(20, 9),
(21, 12),
(21, 4),
(21, 10),
(22, 1),
(22, 9),
(23, 6),
(23, 9),
(23, 4),
(24, 11),
(24, 10),
(24, 4),
(25, 3),
(25, 7),
(25, 10),
(26, 3),
(26, 9),
(26, 6),
(27, 11),
(27, 1),
(27, 6),
(28, 3),
(28, 9),
(28, 4),
(29, 3),
(29, 11),
(29, 10),
(30, 3),
(30, 1),
(30, 10),
(31, 3),
(31, 1),
(31, 9),
(32, 9),
(32, 10),
(32, 4),
(33, 3),
(33, 16),
(33, 4),
(34, 3),
(34, 7),
(35, 11),
(35, 2),
(35, 1);


-- -----------------------------------------------------
-- Table `trailerflix`.`CONTENIDO_ACTORES`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `CONTENIDO_ACTORES` (
  `id_pelicula` INT NOT NULL,
  `id_actores` INT NOT NULL,
  PRIMARY KEY (`id_pelicula`, `id_actores`),
  INDEX `id_actores_fk_idx` (`id_actores` ASC) VISIBLE,
  CONSTRAINT `id_peliculas_fk`
    FOREIGN KEY (`id_pelicula`)
    REFERENCES `trailerflix`.`CONTENIDO` (`id_pelicula`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `id_actores_fk`
    FOREIGN KEY (`id_actores`)
    REFERENCES `trailerflix`.`ACTORES` (`id_actores`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;
-- REGISTROS A LA TABLA
INSERT INTO `CONTENIDO_ACTORES`(id_pelicula, id_actores ) VALUES 
(3, 167),
(3, 23),
(3, 151),
(3, 29),
(3, 174),
(3, 72),
(4, 203),
(4, 49),
(4, 62),
(4, 178),
(4, 3),
(4, 57),
(5, 10),
(5, 197),
(5, 76),
(5, 153),
(5, 34),
(5, 86),
(2, 124),
(2, 25),
(2, 21),
(2, 138),
(2, 134),
(2, 133),
(1, 35),
(1, 161),
(1, 143),
(1, 197),
(1, 204),
(1, 78),
(6, 149),
(6, 183),
(6, 78),
(6, 127),
(6, 12),
(7, 99),
(7, 175),
(7, 209),
(7, 67),
(7, 16),
(7, 185),
(8, 176),
(8, 30),
(8, 138),
(8, 31),
(8, 184),
(8, 93),
(9, 58),
(9, 122),
(9, 190),
(9, 116),
(9, 168),
(9, 156),
(10, 74),
(10, 106),
(10, 47),
(10, 93),
(10, 95),
(10, 201),
(11, 97),
(11, 102),
(11, 11),
(11, 188),
(11, 118),
(11, 146),
(11, 145),
(12, 91),
(12, 43),
(12, 125),
(12, 52),
(12, 76),
(12, 142),
(13, 7),
(13, 71),
(13, 169),
(13, 42),
(13, 44),
(13, 129),
(14, 73),
(14, 50),
(14, 156),
(14, 175),
(14, 4),
(14, 205),
(15, 86),
(15, 193),
(15, 61),
(15, 165),
(15, 96),
(15, 1),
(16, 64),
(16, 194),
(16, 90),
(16, 190),
(16, 56),
(16, 130),
(17, 121),
(17, 185),
(17, 132),
(17, 115),
(17, 198),
(17, 4),
(18, 95),
(18, 101),
(18, 39),
(18, 62),
(18, 69),
(18, 79),
(19, 135),
(19, 66),
(19, 140),
(19, 109),
(19, 6),
(19, 33),
(20, 192),
(20, 173),
(20, 196),
(20, 169),
(20, 124),
(20, 200),
(21, 181),
(21, 115),
(21, 84),
(21, 111),
(21, 12),
(21, 155),
(22, 150),
(22, 113),
(22, 161),
(22, 9),
(22, 104),
(22, 63),
(23, 14),
(23, 95),
(23, 13),
(23, 83),
(23, 81),
(23, 86),
(24, 26),
(24, 147),
(24, 45),
(24, 15),
(24, 140),
(24, 46),
(25, 34),
(25, 141),
(25, 12),
(25, 106),
(25, 29),
(25, 193),
(26, 70),
(26, 206),
(26, 12),
(26, 59),
(27, 7),
(27, 129),
(27, 9),
(27, 90),
(27, 92),
(27, 83),
(28, 111),
(28, 141),
(28, 120),
(28, 117),
(28, 4),
(28, 52),
(28, 179),
(29, 184),
(29, 66),
(29, 51),
(29, 155),
(29, 170),
(29, 26),
(29, 33),
(30, 141),
(30, 95),
(30, 116),
(30, 90),
(30, 148),
(30, 186),
(30, 111),
(31, 6),
(31, 53),
(31, 164),
(31, 194),
(31, 40),
(31, 35),
(31, 75),
(32, 32),
(32, 30),
(32, 80),
(32, 205),
(32, 76),
(32, 42),
(32, 4),
(32, 127),
(33, 33),
(33, 71),
(33, 55),
(33, 94),
(33, 67),
(33, 181),
(33, 154),
(34, 34),
(34, 118),
(34, 87),
(34, 77),
(34, 85),
(34, 187),
(35, 35),
(35, 186),
(35, 19),
(35, 185),
(35, 14),
(35, 182);

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
